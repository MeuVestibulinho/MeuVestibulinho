// prisma/schema.prisma
// Docs: https://pris.ly/d/prisma-schema
//
// O que é o Prisma?
// ORM moderno para bancos relacionais com tipagem forte, migrações e DX excelente.

// ==========================
// Prisma Client (geração)
// ==========================
generator client {
  provider = "prisma-client-js"
}

// ==========================
// Datasource (PostgreSQL)
// ==========================
datasource db {
  provider          = "postgresql"
  // URL principal do banco usado pela aplicação
  url               = env("DATABASE_URL")
  // URL do shadow database usada pelo `prisma migrate dev`
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

/* ======================================================================
   MODELOS DO AUTH.JS (NextAuth) — mantidos para compatibilidade do projeto
   ====================================================================== */

model User {
  id            String    @id @default(cuid())     // PK
  name          String?                           // nome opcional
  email         String?    @unique                // e-mail opcional, único se existir
  emailVerified DateTime?                         // data de verificação do e-mail
  image         String?                           // avatar (URL)

  accounts      Account[]                         // 1:N -> contas OAuth
  sessions      Session[]                         // 1:N -> sessões (se usar Session store)

  // (sem relações com questões por enquanto; focamos no modelo básico solicitado)
}

model Account {
  id                String  @id @default(cuid())  // PK
  userId            String                         // FK -> User
  type              String                         // "oauth" | "oidc" | "email" | "credentials"…
  provider          String                         // ex.: "google", "discord", "keycloak"
  providerAccountId String                         // ID do usuário no provedor

  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])         // evita duplicar a mesma conta do provedor
}

model Session {
  id           String   @id @default(cuid())      // PK
  sessionToken String   @unique                   // token da sessão (lookup)
  userId       String                             
  expires      DateTime                           // expiração (UTC)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String                                // e-mail/identificador
  token      String   @unique                      // token único
  expires    DateTime

  @@unique([identifier, token])                    // evita duplicatas
}

/* ===========================================================
   MODELO ENXUTO DE QUESTÕES (Vestibulinho ETEC) 
   =========================================================== */

/// Disciplinas suportadas
enum Disciplina {
  PORTUGUES
  MATEMATICA
  CIENCIAS_HUMANAS
  CIENCIAS_NATUREZA
  HISTORIA
  GEOGRAFIA
  BIOLOGIA
  FISICA
  QUIMICA
}

/// Grau de dificuldade
enum GrauDificuldade {
  MUITO_FACIL
  FACIL
  MEDIO
  DIFICIL
  MUITO_DIFICIL
}

/// Alternativa correta (A..E)
enum Alternativa {
  A
  B
  C
  D
  E
}

/// Questão: campos essenciais conforme a especificação solicitada.
/// - Nomenclatura em camelCase para seguir convenção Prisma/TS.
/// - Campos textuais longos com @db.Text.
/// - Percentual de acerto como Decimal (string no JSON).
model Questao {
  // Identificação da Questão
  id                      String          @id @default(cuid())   // chave primária
  anoProva                Int                                 // ano da prova
  edicao                  String                              // "1º semestre", "2º semestre", etc.
  instituicao             String                              // "ETEC", "IFSP", etc.
  urlProva                String?                             // link direto da prova oficial

  // Classificação
  disciplina              Disciplina                          // Matemática, Português, etc.
  tema                    String?                             // ex.: frações
  subtema                 String?                             // ex.: frações equivalentes
  grauDificuldade         GrauDificuldade                     // fácil, médio, difícil
  habilidade              String?                             // BNCC/competência (opcional)

  // Conteúdo da Questão
  enunciado               String          @db.Text            // enunciado textual
  imagemUrl               String?                             // URL de imagem do enunciado, se houver

  alternativaA            String          @db.Text            // A
  alternativaB            String          @db.Text            // B
  alternativaC            String          @db.Text            // C
  alternativaD            String          @db.Text            // D
  alternativaE            String          @db.Text            // E
  respostaCorreta         Alternativa                          // "A".."E"

  // Explicação / Resolução
  resolucaoTexto          String?         @db.Text            // explicação passo a passo
  resolucaoImagem         String?                             // imagem/print da resolução (URL)
  fonteReferencia         String?                             // apostila/autor/prova original

  // Metadados
  tags                    String[]        @default([])        // palavras-chave
  tempoMedioResolucaoMin  Int?                                // tempo médio (minutos)
  percentualAcerto        Decimal?        @db.Decimal(5, 2)   // % (0–100, ex.: 78.50)
  usosEmSimulados         Int             @default(0)         // contador de usos em simulados
  comentarios             String?         @db.Text            // observações

  createdAt               DateTime        @default(now())
  updatedAt               DateTime        @updatedAt

  @@index([anoProva, disciplina, grauDificuldade])
}
